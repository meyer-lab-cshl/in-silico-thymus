var documenterSearchIndex = {"docs":
[{"location":"instructions/#Instructions","page":"Instructions","title":"Instructions","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Install Julia vX.X following instructions here: https://julialang.org/downloads/","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Additional useful information on getting started can be found here: https://docs.julialang.org/en/v1/manual/getting-started/","category":"page"},{"location":"instructions/#Example","page":"Instructions","title":"Example","text":"","category":"section"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"Below is an example of how to run the ABM using Julia, assuming it and all required packages are installed:","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"julia ThymusABM.jl --steps 2000 --n_tecs 500 --n_dendritics 50 --n_thymocytes 5000 --selection_threshold 2.5 --dt 1.0 --rng 42 --synapse_interactions 3 --min_strong_interactions 1 --dim1 10.0 --dim2 10.0 --dim3 10.0","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"The parameters that can be specified when running the ABM are listed below. If any parameter is not specified, the default value will be used.","category":"page"},{"location":"instructions/","page":"Instructions","title":"Instructions","text":"--steps\n    How long to run the ABM for\n    arg_type = Int\n    default = 1000\n--dim1\n    Length of 1st dimension\n    arg_type = Float64\n    default = 10.0\n--dim2\n    Length of 2nd dimension\n    arg_type = Float64\n    default = 10.0\n--dim3\n    Length of 3rd dimension\n    arg_type = Float64\n    default = 10.0\n--n_tecs\n    Number of mTECs to place in ABM\n    arg_type = Int\n    default = 500\n--n_dendritics\n    Number of dendritic cells to place in ABM\n    arg_type = Int\n    default = 50\n--n_thymocytes\n    Number of thymocytes to place in ABM\n    arg_type = Int\n    default = 5000\n--selection_threshold\n    Reaction threshold needing to be met to cause negative selection\n    arg_type = Float64\n    default = 1.6\n--dt\n    Size of time step - important for velocity/position calculations\n    arg_type = Float64\n    default = 1.0\n--rng\n    Random number generator seed to use\n    arg_type = Int\n    default = 1\n--synapse_interactions\n    Amount of reactions to calculate for one interaction between APC and thymocyte\n    arg_type = Int\n    default = 1\n--min_strong_interactions\n    Minimum amount of strong reactions needed in one APC-thymocyte interaction to induce negative selection\n    arg_type = Int\n    default = 1","category":"page"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Assumptions:","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Constant population of all cell types maintained\nThymocytes either die by negative selection, or leave the thymus after a certain number of interactions\nmTECs die and are replaced by a new mTEC after a certain number of interactions\nmTECs/DCs can interact with multiple thymocytes at once\nmTECs remain stationary\nDCs are motile\nThymocytes are motile\nTCR:pMHC binding strength is calculated by comparing their strings through generated binding matrices\nIf number of complexes parameter is >1, the reaction strengths for each complex are summed and then compared to negative selection threshold\nmTECs go through a development process as they have more interactions, which changes the genes expressed and peptides presented\nThymocytes each have a randomly generated TCR\nDCs copy the presented peptides of any mTEC that they interact with","category":"page"},{"location":"#ThymusABM.jl-Documentation","page":"Home","title":"ThymusABM.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Functions","page":"Home","title":"Functions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [ThymusABM]","category":"page"},{"location":"#ThymusABM.Dendritic","page":"Home","title":"ThymusABM.Dendritic","text":"Dendritic\nid::Int                             # Unique ID to identify agent\npos::NTuple{3,Float64}              # 2D position of agent\nvel::NTuple{3,Float64}              # 2D velocity of agent\nmass::Float64                       # Mass of agent to use in collisions\ntype::Symbol                        # Cell type of agent\ncolor::String                       # Color used for agent in videos\nsize::Float64                       # Size of agent in videos\nnum_interactions::Int               # Total number of interactions agent has\nantigens::Array                     # List of antigens the Dendritic agent contains\nsteps_alive::Int                    # Number of steps the Dendritic agent has been alive for\n\nDendritic agent struct.\n\n\n\n\n\n","category":"type"},{"location":"#ThymusABM.Parameters","page":"Home","title":"ThymusABM.Parameters","text":"Parameters\nwidth_height::NTuple{3,Float64} = width_height                          # 3-Tuple of Float64 for 3 dimensions of the simulation (x, y, z)\nspeed::Float64 = speed                                                  # Float64 speed factor\ndt::Float64 = dt                                                        # Float64 of time step governing movement/velocity of agents\nn_tecs::Int = n_tecs                                                    # Int of number of mTECs to have in simulation\nn_thymocytes::Int = n_thymocytes                                        # Int of number of thymocytes to have in simulation\nn_dendritics::Int = n_dendritics                                        # Int of number of DCs to have in simulation\nthreshold::Int16 = threshold                                            # Int of negative selection threshold of thymocytes\npeptides::Array = peptides                                              # Array of all possible peptides a mTEC/DC can present\ntcrs::Array = tcrs                                                      # Array of generated TCRs for thymocyte to randomly select from\nsuccessful_interactions::Int = successful_interactions                  # Int of number of times a thymocyte was selected in an interaction with mTEC/DC\nunsuccessful_interactions::Int = unsuccessful_interactions              # Int of number of times a thymocyte was not selected in an interaction with mTEC/DC\nescaped_thymocytes::Int = 0                                             # Int of number of thymocytes that were not negatively selected that should have been\nautoreactive_thymocytes::Int = 0                                        # Int of number of thymocytes that were negatively selected or escaped\nnonautoreactive_thymocytes::Int = 0                                     # Int of number of thymocytes that were not autoreactive and can be assumed to have successfully exited the thymus\ntotal_thymocytes::Int = 0                                               # Int of total number of thymocytes that have entered simulation\ntreg_threshold::Float64 = treg_threshold                                # Float64 setting the threshold for a nonautoreactive thymocyte to be classified as a Treg\nnum_tregs::Int = 0                                                      # Int of total number of Tregs that have successfully exited simulation\ntecs_present::Int = n_tecs                                              # Int of number of mTECs currently present in the simulation\naa_matrix::NamedArray = aa_matrix                                       # NamedArray containing all possible interaction strengths between peptides and tcrs\nsynapse_interactions::Int = synapse_interactions                        # Int of total number of peptide:TCR reactions to calculate for one thymocyte:mTEC/DC interaction\nmin_strong_interactions::Int = min_strong_interactions                  # Int of minimum number of reactions in a thymocyte:mTEC/DC interaction that need to be strong enough to cause negative selection         \ndeaths::Int = deaths                                                    # Int of total number of thymocytes that have exited simulation for any reason at current step\ntotal_dead_thymocytes::Int = total_dead_thymocytes                      # Int of total number of thymocytes that have exited simulation for any reason across all steps\nalive_thymocytes::Int = alive_thymocytes                                # Int of total number of alive thymocytes at current step\nstage_genes_peptides_dict::Vector{Any} = stage_genes_peptides_dict      # Vector holding the development stage information for mTECs (genes and corresponding peptides for each stage)\nmax_tec_interactions::Int = max_tec_interactions                        # Int of maximum number of interactions a mTEC can have before it \"dies\" and is replaced by a new one\nmax_thymocyte_interactions::Int = max_thymocyte_interactions            # Int of maximum number of interactions a thymocyte must have before it leaves as a nonautoreactive T cell\nstep::Int = 0                                                           # Int of current step of simulation\n\nParameters struct.\n\n\n\n\n\n","category":"type"},{"location":"#ThymusABM.Tec","page":"Home","title":"ThymusABM.Tec","text":"Tec\nid::Int                             # Unique ID to identify agent\npos::NTuple{3,Float64}              # 2D position of agent\nvel::NTuple{3,Float64}              # 2D velocity of agent\nmass::Float64                       # Mass of agent to use in collisions\ntype::Symbol                        # Cell type of agent\ncolor::String                       # Color used for agent in videos\nsize::Float64                       # Size of agent in videos\nnum_interactions::Int               # Total number of interactions agent has\nantigens::Array                     # List of antigens the Tec agent contains\nstage::Int                          # Maturation stage of Tec\nsteps_alive::Int                    # Number of steps the Tec agent has been alive for\n\nTec agent struct.\n\n\n\n\n\n","category":"type"},{"location":"#ThymusABM.Thymocyte","page":"Home","title":"ThymusABM.Thymocyte","text":"Thymocyte\nid::Int                             # Unique ID to identify agent\npos::NTuple{3,Float64}              # 2D position of agent\nvel::NTuple{3,Float64}              # 2D velocity of agent\nmass::Float64                       # Mass of agent to use in collisions\ntype::Symbol                        # Cell type of agent\ncolor::String                       # Color used for agent in videos\nsize::Float64                       # Size of agent in videos\nnum_interactions::Int               # Total number of interactions agent has\ntcr::String                         # TCR that the thymocyte agent is carrying\nreaction_levels::Dict               # Dict to hold thymocyte's seen antigens and reaction levels to them\ndeath_label::Bool                   # Label a thymocyte to be killed on its next step\nconfined::Bool                      # Boolean if the thymocyte has been confined by an APC\nbind_location::NTuple{3,Float64}    # Location of binding w/ APC that led to confinement\ntreg::Bool                          # Boolean if thymocyte meets Treg threshold or not\nsteps_alive::Int                    # Number of steps the Thymocyte agent has been alive for\n\nThymocyte agent struct.\n\n\n\n\n\n","category":"type"},{"location":"#ThymusABM.add_dendritics!-NTuple{4, Any}","page":"Home","title":"ThymusABM.add_dendritics!","text":"add_dendritics!(model, n_dendritics, color, size)\n\nAdds n_dendritics number of Dendritics to the model of given color and size.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.add_tecs!-NTuple{5, Any}","page":"Home","title":"ThymusABM.add_tecs!","text":"add_tecs!(model, n_tecs, color, size, replenishing)\n\nAdds n_tecs number of Tecs to the model of given color and size. Boolean replenishing determines if Tec is an initial Tec (true), or added to the model later on (false).\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.add_thymocytes!-NTuple{5, Any}","page":"Home","title":"ThymusABM.add_thymocytes!","text":"add_thymocytes!(model, n_thymocytes, color, size, initial)\n\nAdds n_thymocytes number of Thymocytes to the model of given color and size. Boolean initial determines if Thymocyte is an initial Thymocyte (true), or added to the model later on (false).\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.alive_ratio-Tuple{Any}","page":"Home","title":"ThymusABM.alive_ratio","text":"alive_ratio(model)\n\nReturn the proportion of alive thymocytes to exited and dead thymocytes in the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.calculate_reaction_strength-NTuple{4, Any}","page":"Home","title":"ThymusABM.calculate_reaction_strength","text":"calculate_reaction_strength(model, peptide, tcr, reaction_levels)\n\nCalculate the strength of the interaction between given peptide and tcr for the model. Store the calculated strength in the Thymocyte's reaction_levels dictionary.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.cell_colors-Tuple{Any}","page":"Home","title":"ThymusABM.cell_colors","text":"cell_colors(a)\n\nReturn the color of the given agent a.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.cell_markers-Tuple{Union{Dendritic, Tec, Thymocyte}}","page":"Home","title":"ThymusABM.cell_markers","text":"cell_markers(a)\n\nReturn the marker of the given agent a.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.cell_move!-Tuple{Union{Dendritic, Tec, Thymocyte}, Any}","page":"Home","title":"ThymusABM.cell_move!","text":"cell_move!(agent::Union{Tec, Dendritic, Thymocyte}, model)\n\nMove the given agent of the model according to its type.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.cell_sizes-Tuple{Any}","page":"Home","title":"ThymusABM.cell_sizes","text":"cell_sizes(a)\n\nReturn the size of the given agent a.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.collide!-Tuple{Union{Dendritic, Tec, Thymocyte}, Union{Dendritic, Tec, Thymocyte}}","page":"Home","title":"ThymusABM.collide!","text":"collide!(a::Union{Tec, Dendritic, Thymocyte}, b::Union{Tec, Dendritic, Thymocyte})\n\nCalculates an elastic collision between two agents, a and b, when they collide with each other. Adapted from Agents.jl elastic_collision and modified to work for 3D animations.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.escape_ratio-Tuple{Any}","page":"Home","title":"ThymusABM.escape_ratio","text":"escape_ratio(model)\n\nReturn the proportion of exited and dead thymocytes that escaped in the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.escapedautoreactive_ratio-Tuple{Any}","page":"Home","title":"ThymusABM.escapedautoreactive_ratio","text":"escapedautoreactive_ratio(model)\n\nReturn the proportion of autoreactive thymocytes that escaped in the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.initialize-Tuple{}","page":"Home","title":"ThymusABM.initialize","text":"initialize(;\n    width_height = (1.0, 1.0, 1.0),\n    speed = 0.002,\n    n_tecs = 50,\n    n_thymocytes = 1000,\n    n_dendritics = 50,\n    dt=1.0,\n    threshold = 0.8,\n    treg_threshold = 0.6,\n    rng_seed = 1,\n    synapse_interactions = 1,\n    min_strong_interactions = 1,\n    max_tec_interactions = 200,\n    max_thymocyte_interactions = 80)\n\nInitialize the model with default or specified parameters. Returns the initialized model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.model_step!-Tuple{Any}","page":"Home","title":"ThymusABM.model_step!","text":"model_step!(model)\n\nSteps the model one step forward. Calculates all agent interactions for the given step. Determines when an agent leaves due to age and adds new agent to replenish it.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.nonreact_ratio-Tuple{Any}","page":"Home","title":"ThymusABM.nonreact_ratio","text":"nonreact_ratio(model)\n\nReturn the proportion of exited and dead thymocytes that were non-autoreactive in the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.parse_commandline-Tuple{}","page":"Home","title":"ThymusABM.parse_commandline","text":"parse_commandline()\n\nParse command line arguments to set up the ABM.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.react_ratio-Tuple{Any}","page":"Home","title":"ThymusABM.react_ratio","text":"react_ratio(model)\n\nReturn the proportion of exited and dead thymocytes that were autoreactive in the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.set_color!-Tuple{Union{Dendritic, Tec, Thymocyte}, Any}","page":"Home","title":"ThymusABM.set_color!","text":"set_color!(agent::Union{Tec, Dendritic, Thymocyte}, model)\n\nSet the color of the given agent of the model according to its type.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.tec-Tuple{Any}","page":"Home","title":"ThymusABM.tec","text":"tec(a)\n\nUsed to check if agent a is a Tec.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.tec_DC_interact!-Tuple{Union{Dendritic, Tec, Thymocyte}, Union{Dendritic, Tec, Thymocyte}, Any}","page":"Home","title":"ThymusABM.tec_DC_interact!","text":"tec_DC_interact!(a1::Union{Tec, Dendritic, Thymocyte}, a2::Union{Tec, Dendritic, Thymocyte}, model)\n\nGoverns the interaction between a Tec and Dendritic of the model who come into contact. Transfers Tec antigens to Dendritic antigens.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.thymocyte-Tuple{Any}","page":"Home","title":"ThymusABM.thymocyte","text":"thymocyte(a)\n\nUsed to check if agent a is a Thymocyte.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.thymocyte_APC_interact!-Tuple{Union{Dendritic, Tec, Thymocyte}, Union{Dendritic, Tec, Thymocyte}, Any}","page":"Home","title":"ThymusABM.thymocyte_APC_interact!","text":"thymocyte_APC_interact!(a1::Union{Tec, Dendritic, Thymocyte}, a2::Union{Tec, Dendritic, Thymocyte}, model)\n\nGoverns the interaction between a Thymocyte and Tec (or Dendritic) of the model who come into contact. Calculates Thymocyte TCR binding affinity to one of Tec or Dendritic's peptides.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.total_thy-Tuple{Any}","page":"Home","title":"ThymusABM.total_thy","text":"total_thy(model)\n\nReturn the total number of dead, exited, and alive thymocytes by end of simulation of the model.\n\n\n\n\n\n","category":"method"},{"location":"#ThymusABM.update_tec_stage-Tuple{Any, Any}","page":"Home","title":"ThymusABM.update_tec_stage","text":"update_tec_stage(tec, model)\n\nUpdates the development stage of the given Tec agent tec of the model according to how many interactions with Thymocytes it has had so far.\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
